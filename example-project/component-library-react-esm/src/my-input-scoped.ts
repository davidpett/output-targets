'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type InputChangeEventDetail, type MyInputScopedCustomEvent } from 'component-library';
import {
  MyInputScoped as MyInputScopedElement,
  defineCustomElement as defineMyInputScoped,
} from 'component-library/components/my-input-scoped.js';
import React from 'react';

export type MyInputScopedEvents = {
  onMyInput: EventName<MyInputScopedCustomEvent<KeyboardEvent>>;
  onMyChange: EventName<MyInputScopedCustomEvent<InputChangeEventDetail>>;
  onMyBlur: EventName<CustomEvent<void>>;
  onMyFocus: EventName<CustomEvent<void>>;
};

export const MyInputScoped: StencilReactComponent<MyInputScopedElement, MyInputScopedEvents> =
  /*@__PURE__*/ createComponent<MyInputScopedElement, MyInputScopedEvents>({
    tagName: 'my-input-scoped',
    elementClass: MyInputScopedElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
      onMyInput: 'myInput',
      onMyChange: 'myChange',
      onMyBlur: 'myBlur',
      onMyFocus: 'myFocus',
    } as MyInputScopedEvents,
    defineCustomElement: defineMyInputScoped,
  });
