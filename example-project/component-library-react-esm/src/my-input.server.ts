/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, type SerializeShadowRootOptions } from '@stencil/react-output-target/ssr';
import { type InputChangeEventDetail, type MyInputCustomEvent } from 'component-library';
import { MyInput as MyInputElement } from 'component-library/components/my-input.js';

export const serializeShadowRoot: SerializeShadowRootOptions = {
  scoped: ['my-counter'],
  default: 'declarative-shadow-dom',
};

export type MyInputEvents = {
  onMyInput: EventName<MyInputCustomEvent<KeyboardEvent>>;
  onMyChange: EventName<MyInputCustomEvent<InputChangeEventDetail>>;
  onMyBlur: EventName<CustomEvent<void>>;
  onMyFocus: EventName<CustomEvent<void>>;
};

export const MyInput: StencilReactComponent<MyInputElement, MyInputEvents> = /*@__PURE__*/ createComponent<
  MyInputElement,
  MyInputEvents
>({
  tagName: 'my-input',
  properties: {
    color: 'color',
    accept: 'accept',
    autocapitalize: 'autocapitalize',
    autocomplete: 'autocomplete',
    autocorrect: 'autocorrect',
    autofocus: 'autofocus',
    clearInput: 'clear-input',
    clearOnEdit: 'clear-on-edit',
    disabled: 'disabled',
    enterkeyhint: 'enterkeyhint',
    inputmode: 'inputmode',
    max: 'max',
    maxlength: 'maxlength',
    min: 'min',
    minlength: 'minlength',
    multiple: 'multiple',
    name: 'name',
    pattern: 'pattern',
    placeholder: 'placeholder',
    readonly: 'readonly',
    required: 'required',
    spellcheck: 'spellcheck',
    step: 'step',
    size: 'size',
    type: 'type',
    value: 'value',
  },
  hydrateModule: import('component-library/hydrate'),
  serializeShadowRoot,
});
