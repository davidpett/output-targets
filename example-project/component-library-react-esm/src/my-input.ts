'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type InputChangeEventDetail, type MyInputCustomEvent } from 'component-library';
import {
  MyInput as MyInputElement,
  defineCustomElement as defineMyInput,
} from 'component-library/components/my-input.js';
import React from 'react';

export type MyInputEvents = {
  onMyInput: EventName<MyInputCustomEvent<KeyboardEvent>>;
  onMyChange: EventName<MyInputCustomEvent<InputChangeEventDetail>>;
  onMyBlur: EventName<CustomEvent<void>>;
  onMyFocus: EventName<CustomEvent<void>>;
};

export const MyInput: StencilReactComponent<MyInputElement, MyInputEvents> = /*@__PURE__*/ createComponent<
  MyInputElement,
  MyInputEvents
>({
  tagName: 'my-input',
  elementClass: MyInputElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {
    onMyInput: 'myInput',
    onMyChange: 'myChange',
    onMyBlur: 'myBlur',
    onMyFocus: 'myFocus',
  } as MyInputEvents,
  defineCustomElement: defineMyInput,
});
